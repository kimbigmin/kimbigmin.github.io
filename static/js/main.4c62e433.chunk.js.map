{"version":3,"sources":["logo.svg","data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","img","박스","styled","div","제목","h4","Detail","props","useState","알림창","알림창변경","input","inputChange","useEffect","타이머","setTimeout","console","log","clearTimeout","history","useHistory","useParams","찾은상품","shoes","find","상품","className","onChange","e","target","value","Alert","src","width","Inventory","inventory","onClick","inventoryChange","goBack","class","Merchandise","App","Data","shoes변경","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","to","Toggle","Collapse","Nav","Link","as","NavDropdown","Item","href","Divider","eventKey","exact","path","Carousel","interval","alt","Caption","map","a","i","axios","post","pw","get","then","result","data","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c62e433.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\n  \n  {\n    id : 0,\n    title : \"White and Black\",\n    content : \"Born in France\",\n    price : \"120,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/474849afe08b3.jpg\"\n  },\n\n  {\n    id : 1,\n    title : \"Red Knit\",\n    content : \"Born in Seoul\",\n    price : \"110,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/aec729a492af6.jpg\"\n  },\n\n  {\n    id : 2,\n    title : \"Grey Yordan\",\n    content : \"Born in the States\",\n    price : \"130,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/962c800994746.jpg\"\n  }\n] ","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';  // 꼭 import 해와야 한다.\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';   // CSS 파일 import \n\n\nlet 박스 = styled.div`\n  padding : 20px;\n  \n`;\n\nlet 제목 = styled.h4`\n  font-size : 25px;\n`;\n\n\n\n\n\nfunction Detail(props) {\n\n\n\n  let [알림창, 알림창변경] = useState(true);\n  let [input, inputChange] = useState('');\n// componentDidMount : useEffect 컴포넌트 등장하거나 업데이트 될 때 몇 초 뒤 특정 코드 실행   , \n  useEffect(()=>{\n\n    // axios.get();\n\n    let 타이머 = setTimeout(()=>{ 알림창변경(false); }, 2000)\n    console.log('실행?')\n    return ()=>{ clearTimeout(타이머) }  // setTimeout 쓸 때 유의점 - 타이머 해제 스킬 사용 \n  },[알림창, input]); // 그냥 대괄호 하나만 넣는 것은 딱 한 번만 실행하는 것을 의미 \n  \n  // ** 특정 state가 변경될 때만 실행하는 법 => 조건을 넣어주는 것 즉, 알림창의 state가 변경이 될 때만 실행시키는 것 알림창은 위에 존재해야 한다. 조건을 안 넣으면 페이지가 업데이트 될 때마다 해당 함수가 계속 실행이 된다.\n\n// // componentWillUnmount : useEffect 컴포넌트 사라질 때 특정 코드 실행\n//   useEffect(()=>{      // return 문은 컴포넌트가 사라질 때 실행된다. \n//     return function 어쩌구() { 실행할 코드 } //or () => { } 도 가능\n//   })\n\n// // useEffect 여러개 사용(적은 순서대로 실행)\n\n//   useEffect()\n\n\n//   useEffect()\n\n\n\n\n\n\n  let history = useHistory();   // Hook 으로 방문기록을 모두 담은 object 를 생성\n  let { id } = useParams();  // Hook 으로 파라미터값을 저장을 해서 변수로 만들어서 사용가능하다.\n  let 찾은상품 = props.shoes.find( (상품)=> {\n    return 상품.id == id\n  });\n\n\n\n  return(\n    <div className=\"container\">\n      <박스>\n        <제목 className=\"red\">Detail</제목>\n      </박스>\n      { input }\n      <input onChange={ (e)=>{inputChange(e.target.value)} }/>\n\n      {\n        알림창 === true \n        ? <Alert className=\"my-alert4\"/>\n        : null\n      }\n      \n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img src={찾은상품.img} width=\"100%\" />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\n          <p>{찾은상품.content}</p>\n          <p>{찾은상품.price}원</p>\n\n          <Inventory inventory={props.inventory}/>\n\n          <button className=\"btn btn-danger\" onClick={()=>{\n            \n            props.inventoryChange([9,11,12])\n            \n          }}>주문하기</button> \n          <button className=\"btn btn-danger\" onClick={ ()=>{\n            history.goBack();\n          } }>뒤로가기</button> \n        </div>\n      </div>\n    </div> \n  )\n}\n\n\nexport default Detail;   //export 해야지 다른 곳에서 import 가능 \n\n\nfunction Alert() {\n\n  return(\n    <div class=\"my-alert4\">\n      <p>재고가 얼마 남지 않았습니다.</p>\n    </div>\n  )\n}\n\n\nfunction Inventory(props) {\n  return (\n    <p>재고 : {props.inventory[0]}</p>\n  )\n}","import logo from './logo.svg';\nimport './App.css';\nimport { Navbar, Container, Nav, NavDropdown, Carousel, img } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport Data from \"./data.js\";  // .js 생략해도 된다. \nimport { Link, Route, Switch } from 'react-router-dom';\nimport Detail from \"./Detail.js\"\nimport axios from 'axios';\n\n\n\nfunction App() {\n\n\n  let [shoes, shoes변경] = useState(Data); \n  let [inventory, inventoryChange] = useState([10, 11, 13]);\n\n\n  return (\n    <div className=\"App\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"black\" variant=\"dark\" className=\"navbar\">\n      <Container>\n      <Navbar.Brand>  <Link to=\"/\" className=\"logo\"> Onepiecepiece </Link> </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"me-auto\">\n          <Nav.Link as={Link} to=\"/\"> Home </Nav.Link>\n          <Nav.Link as={Link} to=\"/detail\"> Detail </Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Nav>\n          <Nav.Link href=\"#deets\">More deets</Nav.Link>\n          <Nav.Link eventKey={2} href=\"#memes\">\n            Dank memes\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      </Container>\n      </Navbar>\n\n\n      \n    <Switch>\n\n      <Route exact path=\"/\">\n\n        <div className=\"carousel-style\">\n          <Carousel>\n            <Carousel.Item interval={5000}>\n              <img\n                className=\"carousel-img\"\n                src=\"https://t1.daumcdn.net/cfile/tistory/99BDBB3359A8A0550C\"\n                alt=\"First slide\"\n              />\n              <Carousel.Caption>\n                <h3>New Open Onepiecepiece !</h3>\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item interval={5000}>\n              <img\n                className=\"carousel-img\"\n                src=\"https://t1.daumcdn.net/cfile/tistory/99A78F3359A8A06008\"\n                alt=\"Second slide\"\n              />\n              <Carousel.Caption>\n                <h3>Second slide label</h3>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"carousel-img\"\n                src=\"https://t1.daumcdn.net/cfile/tistory/99FC4A3359A8A04903\"\n                alt=\"Third slide\"\n              />\n              <Carousel.Caption>\n                <h3>Third slide label</h3>\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n          </Carousel>\n        </div>\n\n\n        <div className=\"item-container\">\n          <div className=\"row\">\n          {  \n            shoes.map((a,i) => {\n            return <Merchandise shoes={shoes[i]} i={i} key={i}/>\n            }) \n          }     \n          </div>\n          <button className=\"btn\" onClick={()=>{\n            \n            axios.post('서버URL', { id : 'codingapple', pw : 1234 });\n\n            // 로딩중이라는 UI 띄움 (이곳)\n\n            axios.get(\"https://codingapple1.github.io/shop/data2.json\")\n            .then((result)=>{\n              // 로딩중이라는 UI 안보이게 처리 (이곳)\n              // let newShoes = [...shoes];\n              // newShoes.push(result.data);\n              // shoes변경(newShoes)\n              shoes변경([...shoes, ...result.data]); // 이런식으로 가능하다. ...는 대괄호를 벗겨달라는 의미\n            })\n            .catch((error)=>{\n              console.log(error);\n            }) //새로고침 없이 데이터를 가져온다. ajax 의 유용성\n\n          }}>더보기</button>\n        </div>\n      </Route>\n        \n      <Route path=\"/detail/:id\">   \n        <Detail shoes={shoes} inventory={inventory} inventoryChange={inventoryChange}/>  \n      </Route>\n\n      {/* <Route path=\"/:id\"> \n        <div>아무거나 적었을 때 이거 보여주셈</div>\n      </Route>  */}\n\n    </Switch>     \n\n\n    </div>\n  );\n}\n\nfunction Merchandise(props) {\n  \n  return(\n\n      <div className=\"col-md-4\">\n        <img src={ props.shoes.img } width=\"100%\"/>\n        <h4>{ props.shoes.title }</h4>\n        <p>{ props.shoes.content } & { props.shoes.price } 원</p>\n      </div>\n  )\n}\n\n\n\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}