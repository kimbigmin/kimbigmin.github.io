{"version":3,"sources":["logo.svg","data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","img","inventory","박스","styled","div","제목","h4","Alert","class","Inventory","props","TabContent","useEffect","스위치변경","누른탭","connect","state","reducer","alert열렸니","reducer2","useState","알림창","알림창변경","input","useContext","inventoryContext","누른탭변경","스위치","orderInput","orderInputChange","타이머","setTimeout","console","log","clearTimeout","history","useHistory","useParams","찾은상품","shoes","find","상품","className","src","width","onChange","e","target","value","onClick","inventoryChange","dispatch","type","payload","name","quan","push","goBack","Nav","fill","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","Cart","useSelector","useDispatch","Table","striped","bordered","hover","map","a","i","React","createContext","Merchandise","Test","App","Data","shoes변경","Navbar","collapseOnSelect","expand","bg","Container","Brand","to","Toggle","Collapse","as","NavDropdown","href","Divider","exact","path","Carousel","interval","alt","Caption","Provider","axios","post","pw","get","then","result","data","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c27360a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\n  \n  {\n    id : 0,\n    title : \"White and Black\",\n    content : \"Born in France\",\n    price : \"120,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/474849afe08b3.jpg\",\n    inventory : 10\n  },\n\n  {\n    id : 1,\n    title : \"Red Knit\",\n    content : \"Born in Seoul\",\n    price : \"110,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/aec729a492af6.jpg\",\n    inventory : 25\n  },\n\n  {\n    id : 2,\n    title : \"Grey Yordan\",\n    content : \"Born in the States\",\n    price : \"130,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/962c800994746.jpg\",\n    inventory : 16\n  },\n\n  {\n    id : 3,\n    title : \"White and Black\",\n    content : \"Born in France\",\n    price : \"120,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/474849afe08b3.jpg\",\n    inventory : 10\n  },\n\n  {\n    id : 4,\n    title : \"Red Knit\",\n    content : \"Born in Seoul\",\n    price : \"110,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/aec729a492af6.jpg\",\n    inventory : 25\n  },\n\n  {\n    id : 5,\n    title : \"Grey Yordan\",\n    content : \"Born in the States\",\n    price : \"130,000\",\n    img : \"https://cdn.imweb.me/thumbnail/20210308/962c800994746.jpg\",\n    inventory : 16\n  }\n] ","import axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';  // 꼭 import 해와야 한다.\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';   // CSS 파일 import \nimport { inventoryContext } from './App.js';\nimport { Nav } from 'react-bootstrap';\n\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from 'react-redux';\n\n\n\nlet 박스 = styled.div`\n  padding : 20px;\n  \n`;\n\nlet 제목 = styled.h4`\n  font-size : 25px;\n`;\n\n\nfunction Detail(props) {\n\n  let [알림창, 알림창변경] = useState(true);\n  let [input, inputChange] = useState('');\n  let inventory = useContext(inventoryContext);\n\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n  let [orderInput, orderInputChange] = useState('');\n// componentDidMount : useEffect 컴포넌트 등장하거나 업데이트 될 때 몇 초 뒤 특정 코드 실행   , \n  useEffect(()=>{\n\n    // axios.get();\n    let 타이머 = setTimeout(()=>{ 알림창변경(false); }, 2000)\n    console.log('실행?')\n    return ()=>{ clearTimeout(타이머) }  // setTimeout 쓸 때 유의점 - 타이머 해제 스킬 사용 \n  },[알림창, input]); // 그냥 대괄호 하나만 넣는 것은 딱 한 번만 실행하는 것을 의미 \n  \n  // ** 특정 state가 변경될 때만 실행하는 법 => 조건을 넣어주는 것 즉, 알림창의 state가 변경이 될 때만 실행시키는 것 알림창은 위에 존재해야 한다. 조건을 안 넣으면 페이지가 업데이트 될 때마다 해당 함수가 계속 실행이 된다.\n\n// // componentWillUnmount : useEffect 컴포넌트 사라질 때 특정 코드 실행\n//   useEffect(()=>{      // return 문은 컴포넌트가 사라질 때 실행된다. \n//     return function 어쩌구() { 실행할 코드 } //or () => { } 도 가능\n//   })\n\n// // useEffect 여러개 사용(적은 순서대로 실행)\n\n//   useEffect()\n\n//   useEffect()\n\n  let history = useHistory();   // Hook 으로 방문기록을 모두 담은 object 를 생성\n  let { id } = useParams();  // Hook 으로 파라미터값을 저장을 해서 변수로 만들어서 사용가능하다.\n  let 찾은상품 = props.shoes.find( (상품)=> {\n    return 상품.id == id\n  });\n  \n\n\n  return(\n\n    <div className=\"container\">\n      <박스>\n        <제목 className=\"red\">{ props.shoes[0].title }</제목>\n        <p>{ props.shoes[0].price }원</p>\n      </박스>\n      {/* { input }\n      <input onChange={ (e)=>{inputChange(e.target.value)} }/> */}\n\n      {\n        알림창 === true \n        ? <Alert className=\"my-alert4\"/>\n        : null\n      }\n      \n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img src={찾은상품.img} width=\"100%\" />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\n          <p>{찾은상품.content}</p>\n          <p>{찾은상품.price}원</p>\n\n          <Inventory inventory={props.inventory}/>\n          <span>수량:</span>\n          <input onChange={ (e)=>{orderInputChange(e.target.value)} }>\n            \n          </input>\n\n\n\n          <button className=\"btn btn-danger\" onClick={()=>{\n            \n            \n            props.inventoryChange([10, 11, 12]);\n            props.dispatch({ type : '주문하기', payload : { id : 찾은상품.id, name : 찾은상품.title, quan : orderInput }});\n            history.push('/cart');\n            \n            }}>주문하기</button> \n          <button className=\"btn btn-danger\" onClick={ ()=>{\n            history.goBack();\n          } }>뒤로가기</button> \n        </div>\n      </div>\n\n      <Nav className=\"mt-5\" fill variant=\"tabs\" defaultActiveKey=\"link-0\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-0\" onClick={()=>{ 스위치변경(false); 누른탭변경(0) }}>상세정보</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-1\" onClick={()=>{ 스위치변경(false); 누른탭변경(1) }}>사이즈표</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-2\" onClick={()=>{ 스위치변경(false); 누른탭변경(2) }}>교환 및 환불정책</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-3\" onClick={()=>{ 스위치변경(false); 누른탭변경(3) }}>리뷰</Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>  \n        {/* Tab UI 만들기 */}\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경}/>\n      </CSSTransition>\n\n    </div> \n  )\n}\n\n\nfunction Alert() {\n\n  return(\n    <div class=\"my-alert4\">\n      <p>재고가 얼마 남지 않았습니다.</p>\n    </div>\n  )\n}\n\n\nfunction Inventory(props) {\n  return (\n    <p>재고 : {props.inventory[0]}</p>\n  )\n}\n\n\nfunction TabContent(props) {\n  \n  useEffect(()=>{\n    props.스위치변경(true);\n  });\n\n  if(props.누른탭 === 0) {\n    return <div>0번째 내용입니다.</div>\n  } else if (props.누른탭 === 1) {\n    return <div>1번째 내용입니다.</div>\n  } else if (props.누른탭 === 2) {\n    return <div>2번째 내용입니다.</div>\n  } else {\n    return <div>3번째 내용입니다.</div>\n  }\n      \n}\n\n\nfunction statef를props화(state){\n  return {\n    state : state.reducer,\n    alert열렸니 : state.reducer2\n  }\n}\n\n\n\n\n\nexport default connect(statef를props화)(Detail);   //export 해야지 다른 곳에서 import 가능 \n","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\nfunction Cart(props) {\n  \n  let state = useSelector((state)=> state); //파라미터안에 state 는 redux 안에 있는 state\n  // let state = useSelector((state)=> state.reducer); 이렇게 써도 된다.\n  console.log(state.reducer);\n  // console.log(state); \n\n\n  let dispatch = useDispatch();   // dispatch를 쓸 때 props. 을 안 붙이게 할 수 있는 함수.\n\n\n  return (\n    <div className=\"cart\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th></th>\n            <th>상품명</th>\n            <th>수량</th>\n            <th>변경</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            state.reducer.map((a,i)=>{\n              \n              return (\n                <tr key={i}>\n                  <td>{a.id}</td>\n                  <td>{a.name}</td>\n                  <td>{a.quan}</td>\n                  <td>\n                    <button onClick={()=>{ dispatch({ type : '수량증가', id : a.id })}}>+</button>\n                    <button onClick={()=>{ dispatch({ type : '수량감소', id : a.id })}}>-</button>\n                  </td>\n                </tr>\n              )\n            })\n          }\n\n            {/* <td>1</td>\n            <td>{ props.state[0].name }</td>\n            <td></td>\n            <td></td> */}\n        </tbody>\n      </Table>\n\n      {\n        props.alert열렸니 === true\n        ? <div className=\"my-alert4\">\n            <p>지금 구매하시면 신규할인 20%</p>\n            <button onClick={()=>{dispatch({ type : 'alert닫기'})}}>닫기</button>\n          </div>\n        : null\n      }\n    </div>\n  )\n}\n\n\n// 옛날 버전 redux state 갖다쓸 수 있는 함수  \n\n\n// function state를props화(state){   // redux의 store state (배열)\n//   return {\n//     // 상품명 : state[0].name\n//     state : state.reducer,\n//     alert열렸니 : state.reducer2\n//   }\n\n// }    // index.js 에 있는 redux state를 사용하기 위한 함수  \n\n\n\n// export default connect(state를props화)(Cart) // export 할 때 connect 함수 사용해야함\n\nexport default Cart;","import logo from './logo.svg';\nimport './App.css';\nimport { Navbar, Container, Nav, NavDropdown, Carousel, img } from 'react-bootstrap';\nimport React, { useState, useContext } from 'react';\nimport Data from \"./data.js\";  // .js 생략해도 된다. \nimport { Link, Route, Switch } from 'react-router-dom';\nimport Detail from \"./Detail.js\"\nimport axios from 'axios';\nimport Cart from './Cart.js';\n\nexport let inventoryContext = React.createContext();  // Context API step 1. 범위태그 만들기  // Context API : 다른 파일에서 사용하려면 export 를 해줘야 한다. \n\n\n\nfunction App() {\n\n\n  let [shoes, shoes변경] = useState(Data); \n  let [inventory, inventoryChange] = useState([10, 11, 13]);\n\n\n  return (\n\n    <div className=\"App\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"black\" variant=\"dark\" className=\"navbar\">\n      <Container>\n      <Navbar.Brand>  <Link to=\"/\" className=\"logo\"> Onepiecepiece </Link> </Navbar.Brand>\n      <Navbar.Toggle id=\"navToggle\" aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"me-auto\">\n          <Nav.Link as={Link} to=\"/\"> Home </Nav.Link>\n          <Nav.Link as={Link} to=\"/detail\"> Detail </Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Nav>\n          <Nav.Link as={Link} to={'cart'}>장바구니</Nav.Link>\n          <Nav.Link eventKey={2} href=\"#memes\">\n            Dank memes\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      </Container>\n      </Navbar>\n\n\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"carousel-style\">\n            <Carousel>\n              <Carousel.Item interval={5000}>\n                <img\n                  className=\"carousel-img\"\n                  src=\"https://t1.daumcdn.net/cfile/tistory/99BDBB3359A8A0550C\"\n                  alt=\"First slide\"\n                />\n                <Carousel.Caption>\n                  <h3>New Open Onepiecepiece !</h3>\n                  <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                </Carousel.Caption>\n              </Carousel.Item>\n              <Carousel.Item interval={5000}>\n                <img\n                  className=\"carousel-img\"\n                  src=\"https://t1.daumcdn.net/cfile/tistory/99A78F3359A8A06008\"\n                  alt=\"Second slide\"\n                />\n                <Carousel.Caption>\n                  <h3>Second slide label</h3>\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                </Carousel.Caption>\n              </Carousel.Item>\n              <Carousel.Item>\n                <img\n                  className=\"carousel-img\"\n                  src=\"https://t1.daumcdn.net/cfile/tistory/99FC4A3359A8A04903\"\n                  alt=\"Third slide\"\n                />\n                <Carousel.Caption>\n                  <h3>Third slide label</h3>\n                  <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                </Carousel.Caption>\n              </Carousel.Item>\n            </Carousel>\n          </div>\n\n\n          <div className=\"item-container\">\n\n          {/* Context API step 2. 범위태그의 범위를 지정하고 value에 공유하고 싶은 변수 적기 */}\n            <inventoryContext.Provider value={inventory}>  \n            <div className=\"row\">\n            {  \n              shoes.map((a,i) => {\n              return <Merchandise shoes={shoes[i]} i={i} key={i}/>\n              }) \n            }     \n            </div>\n            </inventoryContext.Provider>\n\n\n            <button className=\"btn\" onClick={()=>{\n              axios.post('서버URL', { id : 'codingapple', pw : 1234 });\n              // 로딩중이라는 UI 띄움 (이곳)\n              axios.get(\"https://codingapple1.github.io/shop/data2.json\")\n              .then((result)=>{\n                // 로딩중이라는 UI 안보이게 처리 (이곳)\n                // let newShoes = [...shoes];\n                // newShoes.push(result.data);\n                // shoes변경(newShoes)\n                shoes변경([...shoes, ...result.data]); // 이런식으로 가능하다. ...는 대괄호를 벗겨달라는 의미\n              })\n              .catch((error)=>{\n                console.log(error);\n              }) //새로고침 없이 데이터를 가져온다. ajax 의 유용성\n            }}>더보기</button>\n          </div>\n        </Route>\n          \n\n        <Route path=\"/detail/:id\">  \n          <inventoryContext.Provider>  \n\n            <Detail shoes={shoes} inventory={inventory} inventoryChange={inventoryChange}/>  \n\n          </inventoryContext.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n\n        {/* <Route path=\"/:id\"> \n          <div>아무거나 적었을 때 이거 보여주셈</div>\n        </Route>  */}\n      </Switch>     \n\n\n    </div>\n  );\n}\n\nfunction Merchandise(props) {  \n  \n  let inventory = useContext(inventoryContext);  // Contect API step 3. inventory 라는 state를 props 없이 사용이 가능하다.\n\n  return(\n\n      <div className=\"col-md-4\">\n        <img src={ props.shoes.img } width=\"100%\"/>\n        <h4>{ props.shoes.title }</h4>\n        <p>{ props.shoes.content } & { props.shoes.price } 원</p>\n        { inventory[props.i] }  {/* // Context API step 4.  */}\n        <Test></Test>\n      </div>\n  )\n}\n\n\n\nfunction Test() {\n  \n  let inventory = useContext(inventoryContext);\n\n  return <p>{ inventory[0] }</p>\n\n}\n\n\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\nimport {combineReducers, createStore} from 'redux';\n\n\n\n\nlet 초기값 = [\n  { id : 0, name : '검정 원피스', quan : 2 }, \n  { id : 1, name : '파란 원피스', quan : 5 }, \n  { id : 2, name : '노란 원피스', quan : 1 }\n];\n\n\n\nfunction reducer(state = 초기값, 액션) {   // 데이터 수정하는 법을 담는 공간 reducer 은 항상 state 를 퉤 뱉어야 한다. 초기값은 default parameter\n  if(액션.type === '수량증가') {\n    \n    let copy = [...초기값];\n    copy[액션.id].quan++;\n    return copy\n\n  } else if(액션.type === '수량감소') {\n\n    let copy = [...초기값];\n\n    if (copy[액션.id].quan > 0) {\n      copy[액션.id].quan--;\n      return copy\n    }\n    return copy\n\n  } else if(액션.type === '주문하기'){\n    \n  if(state[액션.payload.id].id !== 액션.payload.id){\n      let copy = [...초기값];\n      copy.push(액션.payload);\n      return copy\n    } else {\n      let copy = [...초기값];\n      copy[액션.id].quan += 액션.payload.quan;\n      return copy\n    }\n  }  \n  \n  return state\n\n}\n\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n\n  if(액션.type === 'alert닫기'){\n    return state = false;\n  }\n  return state\n}\n\n\n\nlet store = createStore(combineReducers({reducer, reducer2}));   // redux state 초기값 만들기 ;\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>  \n    </BrowserRouter>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}